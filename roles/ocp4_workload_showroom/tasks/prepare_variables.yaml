---
- name: Check for required variables
  ansible.builtin.assert:
    that:
    - guid | default('') | length > 0
    - ocp4_workload_showroom_content_git_repo | default('') | length > 0
    quiet: true
    fail_msg: Required variables (guid or ocp4_workload_showroom_content_git_repo) not defined

- name: Set passthrough variables to per-user data, if desired
  when:
  - agnosticd_passthrough_user_data is defined
  - ocp4_workload_showroom_passthrough_user_data | default(false) | bool
  agnosticd.core.agnosticd_user_info:
    data: "{{ agnosticd_passthrough_user_data | default('', true) }}"
    user: "user{{ n }}"
  loop: "{{ range(1, num_users | int + 1) | list }}"
  loop_control:
    loop_var: n

- name: Set showroom_user_data fact from lookup - global value
  ansible.builtin.set_fact:
    _showroom_user_data: "{{ _showroom_user_data | combine(lookup('agnosticd_user_data', '*')) }}"

- name: Set fact _user_count
  when: _showroom_user_data.users is defined
  ansible.builtin.set_fact:
    _user_count: "{{ _showroom_user_data['users'] | length }}"

- name: Read user-info.yaml
  delegate_to: localhost
  ansible.builtin.slurp:
    src: "{{ hostvars.localhost.output_dir ~ '/user-info.yaml' }}"
  register: r_user_info

- name: Set fact for user info
  ansible.builtin.set_fact:
    _showroom_user_info: '{{ r_user_info.content | b64decode | from_yaml | default([], true) | join("\n") }}'

  # This is for single user, also need to add for multi-user
  # should I (??) put this also in the multi-user deployment loops? #TODO
  # - name: Debug user data to services
  #   when: ocp4_workload_showroom_services is defined
  #   vars:
  #     _name: "{{ _services_item.name }}"
  #     _url_key: "{{ _services_item.user_data_url_key | default('url') }}"
  #     _url: "{{ _services_item[_url_key] | default(_showroom_user_data[_url_key]) }}"
  #   ansible.builtin.debug:
  #     msg: "Name: {{ _name }}, URL key: {{ _url_key }}, URL {{ _url }}"
  #   loop: >-
  #     {{ ocp4_workload_showroom_services }}
  #   loop_control:
  #     loop_var: _services_item
  #     label: "{{ _services_item.name }}"
