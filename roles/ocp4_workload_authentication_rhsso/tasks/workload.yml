---
- name: Install rhsso operator
  ansible.builtin.include_role:
    name: install_operator
  vars:
    install_operator_name: rhsso-operator
    install_operator_namespace: "{{ ocp4_workload_authentication_rhsso_namespace }}"
    install_operator_manage_namespaces: "{{ ocp4_workload_authentication_rhsso_target_namespaces }}"
    install_operator_channel: "{{ ocp4_workload_authentication_rhsso_channel }}"
    install_operator_starting_csv: "{{ ocp4_workload_authentication_rhsso_starting_csv }}"
    install_operator_catalogsource_setup: "{{ ocp4_workload_authentication_rhsso_use_catalog_source }}"
    install_operator_catalogsource_image: "{{ ocp4_workload_authentication_rhsso_catalogsource_image }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_authentication_rhsso_catalogsource_tag }}"

- name: Set facts
  ansible.builtin.set_fact:
    ocp4_workload_authentication_rhsso_ingress_domain: "{{ openshift_cluster_ingress_domain }}"
    ocp4_workload_authentication_rhsso_openshift_redirect_host: "oauth-openshift.{{
     r_ingress_config.resources[0].spec.domain }}"
    ocp4_workload_authentication_rhsso_rhsso_host: "keycloak-{{
      ocp4_workload_authentication_rhsso_namespace }}.{{
      r_ingress_config.resources[0].spec.domain }}"
    ocp4_workload_authentication_rhsso_rhsso_openshift_console_url: console-openshift-console.{{
      r_ingress_config.resources[0].spec.domain }}
    ocp4_workload_authentication_rhsso_rhsso_openshift_api_url: "{{
      openshift_api_url }}"

- name: Create RHSSO resources
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) }}"
    namespace: "{{ ocp4_workload_authentication_rhsso_namespace }}"
  loop:
  - rhsso-instance.yml.j2
  - rhsso-realm-openshift.yml.j2
  - rhsso-client-openshift.yml.j2

- name: Retrieve OpenShift realm client credentials
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: keycloak-client-secret-openshift
    namespace: "{{ ocp4_workload_authentication_rhsso_namespace }}"
  register: r_realm_credentials
  retries: 120
  delay: 10
  until:
  - r_realm_credentials is defined
  - r_realm_credentials.resources is defined
  - r_realm_credentials.resources | length > 0
  - r_realm_credentials.resources[0].data is defined
  - r_realm_credentials.resources[0].data.CLIENT_ID is defined
  - r_realm_credentials.resources[0].data.CLIENT_ID | length > 0
  - r_realm_credentials.resources[0].data.CLIENT_SECRET is defined
  - r_realm_credentials.resources[0].data.CLIENT_SECRET | length > 0

- name: Decode OpenShift realm client secret
  ansible.builtin.set_fact:
    ocp4_workload_authentication_rhsso_openshift_client_secret: "{{ r_realm_credentials.resources[0].data.CLIENT_SECRET | b64decode }}"

- name: Create OpenShift auth resources
  when: ocp4_workload_authentication_rhsso_config != 'rosa'
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
  loop:
  - openshift-openid-client-secret.yml.j2
  - openshift-oauth.yml.j2

- name: Create OpenShift identity provider (rosa)
  when: ocp4_workload_authentication_rhsso_config == 'rosa'
  shell: |
    rosa create idp --cluster rosa-{{ guid }} \
    --type openid \
    --name rhsso \
    --client-id idp-4-ocp \
    --client-secret {{ ocp4_workload_authentication_rhsso_openshift_client_secret }} \
    --issuer-url https://{{ ocp4_workload_authentication_rhsso_rhsso_host }}/auth/realms/openshift \
    --email-claims email \
    --name-claims name \
    --username-claims preferred_username

- name: Create admin user
  when: ocp4_workload_authentication_rhsso_admin_create | bool
  block:
  - name: Creating admin user
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'rhsso-user-openshift.yml.j2') }}"
    vars:
      username: "{{ ocp4_workload_authentication_rhsso_admin_username }}"
      password: "{{ ocp4_workload_authentication_rhsso_admin_password }}"

  - name: Create cluster admin role binding
    kubernetes.core.k8s:
      state: present
      definition: "{{ lookup('template', 'openshift-admin-crb.yml.j2') | from_yaml }}"

- name: Create users
  when: ocp4_workload_authentication_rhsso_user_count | int > 0
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'rhsso-user-openshift.yml.j2') }}"
  vars:
    username: "{{ ocp4_workload_authentication_rhsso_user_name_base }}{{ n + 1 }}"
    password: "{{ ocp4_workload_authentication_rhsso_user_password }}"
  loop: "{{ range(0, ocp4_workload_authentication_rhsso_user_count | int) | list }}"
  loop_control:
    loop_var: n

- name: Retrieve RHSSO admin credentials
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: credential-rhsso-instance
    namespace: "{{ ocp4_workload_authentication_rhsso_namespace }}"
  register: r_rhsso_credentials
  retries: 120
  delay: 10
  until:
  - r_rhsso_credentials is defined
  - r_rhsso_credentials.resources is defined
  - r_rhsso_credentials.resources | length > 0

- name: Remove kubeadmin user
  when: ocp4_workload_authentication_rhsso_remove_kubeadmin | bool
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Secret
    name: kubeadmin
    namespace: kube-system

- name: Save user information messages
  agnosticd.core.agnosticd_user_info:
    msg: >-
      Authentication via RHSSO is enabled on this cluster.
      RHSSO admin console: https://{{ ocp4_workload_authentication_rhsso_rhsso_host }}
      RHSSO admin user: {{ r_rhsso_credentials.resources[0].data.ADMIN_USERNAME | b64decode }}
      RHSSO admin password: {{ r_rhsso_credentials.resources[0].data.ADMIN_PASSWORD | b64decode }}
    data:
      rhsso_admin_console: "{{ ocp4_workload_authentication_rhsso_rhsso_host }}"
      rhsso_admin_user: "{{ r_rhsso_credentials.resources[0].data.ADMIN_USERNAME | b64decode }}"
      rhsso_admin_password: "{{ r_rhsso_credentials.resources[0].data.ADMIN_PASSWORD | b64decode }}"
      openshift_api_server_url: "{{ ocp4_workload_authentication_rhsso_rhsso_openshift_api_url }}"
      openshift_cluster_console_url: "{{ ocp4_workload_authentication_rhsso_rhsso_openshift_console_url }}"
      openshift_cluster_num_users: "{{ ocp4_workload_authentication_rhsso_user_count | int }}"
      openshift_cluster_user_base: "{{ ocp4_workload_authentication_rhsso_user_name_base }}"
      openshift_cluster_user_count: "{{ ocp4_workload_authentication_rhsso_user_count | int }}"

  - name: Save admin information
    when: ocp4_workload_authentication_rhsso_admin_create | bool
    agnosticd.core.agnosticd_user_info:
      msg: >-
        User `{{ ocp4_workload_authentication_rhsso_admin_username }}`
        with password `{{ ocp4_workload_authentication_rhsso_admin_password }}`
        is cluster admin.
      data:
        openshift_cluster_admin_username: "{{ ocp4_workload_authentication_rhsso_admin_username }}"
        openshift_cluster_admin_password: "{{ ocp4_workload_authentication_rhsso_admin_password }}"

  - name: Print user information
    when: ocp4_workload_authentication_rhsso_user_count | int > 0
    agnosticd.core.agnosticd_user_info:
      msg: >-
        Users `{{ ocp4_workload_authentication_rhsso_user_name_base }}1` ..
        `{{ ocp4_workload_authentication_rhsso_user_name_base ~ ocp4_workload_authentication_rhsso_user_count }}`
        created with password `{{ ocp4_workload_authentication_rhsso_user_password }}`

- name: Save user information for user access
  agnosticd.core.agnosticd_user_info:
    user: "{{ ocp4_workload_authentication_rhsso_user_name_base }}{{ n + 1 }}"
    data:
      user: "{{ ocp4_workload_authentication_rhsso_user_name_base }}{{ n + 1 }}"
      password: "{{ ocp4_workload_authentication_rhsso_user_password }}"
      console_url: "{{ ocp4_workload_authentication_rhsso_rhsso_openshift_console_url }}"
      openshift_console_url: "https://{{ ocp4_workload_authentication_rhsso_rhsso_openshift_console_url }}"
      openshift_cluster_ingress_domain: "{{ ocp4_workload_authentication_rhsso_ingress_domain }}"
      login_command: >-
        oc login --insecure-skip-tls-verify=false
        -u {{ ocp4_workload_authentication_rhsso_user_name_base }}{{ n + 1 }}
        -p {{ ocp4_workload_authentication_rhsso_user_password }}
        {{ ocp4_workload_authentication_rhsso_rhsso_openshift_api_url }}
  loop: "{{ range(0, ocp4_workload_authentication_rhsso_user_count | int) | list }}"
  loop_control:
    loop_var: n
