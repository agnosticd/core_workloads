---
- name: Install keycloak operator
  ansible.builtin.include_role:
    name: install_operator
  vars:
    install_operator_name: rhbk-operator
    install_operator_namespace: "{{ ocp4_workload_keycloak_namespace }}"
    install_operator_manage_namespaces: "{{ ocp4_workload_keycloak_namespace }}"
    install_operator_channel: "{{ ocp4_workload_keycloak_channel }}"
    install_operator_automatic_install_plan_approval: "{{    | default('true') }}"
    install_operator_starting_csv: "{{ ocp4_workload_keycloak_starting_csv }}"
    install_operator_catalogsource_setup: "{{ ocp4_workload_keycloak_use_catalog_source }}"
    install_operator_catalogsource_image: "{{ ocp4_workload_keycloak_catalogsource_image }}"
    install_operator_catalogsource_image_tag: "{{ ocp4_workload_keycloak_catalogsource_tag }}"

- name: Determine cluster base domain
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Ingress
    name: cluster
  register: r_ingress_config
  failed_when: r_ingress_config.resources | length < 1

- name: Set base domain
  ansible.builtin.set_fact:
    _ocp4_workload_keycloak_base_domain : "{{ r_ingress_config.resources[0].spec.domain }}"

- name: Create Keycloak namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ ocp4_workload_keycloak_namespace }}"
    state: present

- name: Create Keycloak PSQL deployment
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - postgres_database_user_details.yml.j2
  - postgres_database_pvc.yml.j2
  - postgres_database_deployment.yml.j2
  - postgres_database_service.yml.j2

- name: Create Keycloak instance
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item ) | from_yaml }}"
  loop:
  - keycloak_tls_service.yml.j2
  - keycloak_instance.yml.j2
  - keycloak_route.yml.j2
  - keycloak_realm_import.yml.j2

- name: Remove kubeadmin user
  when: ocp4_workload_keycloak_remove_kubeadmin | bool
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: Secret
    name: kubeadmin
    namespace: kube-system

- name: Create admin role binding if create admin is true
  when: ocp4_workload_keycloak_admin_create | bool
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'openshift-admin-crb.yml.j2') | from_yaml }}"

- name: Create Openshift auth resources
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
  loop:
  - openshift-openid-client-secret.yml.j2
  - openshift-oauth.yml.j2